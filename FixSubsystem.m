function FixSubsystem(System, Old)

if nargin < 1
    System = gcs;
    Old = false;
end
if nargin == 1
    if ~ischar(System)
        System = gcs;
        Old = System;
    else
        Old = false;
    end
end

% Find blocks
Blocks = find_system(System, ...
    'LookUnderMasks', 'all', ...
    'FollowLinks', 'on', ...
    'SearchDepth', '1', ...
    'Variants', 'AllVariants', ...
    'Selected', 'on', ...
    'BlockType', 'SubSystem', ...
    'LinkStatus', 'none');

% Filter out parent block
Blocks = Blocks(~strcmp(Blocks, System));

% Set each block's data type
for Index=1:length(Blocks)
    try
        % Always delete mask
        Mask = Simulink.Mask.get(Blocks{Index});
        if ~isempty(Mask)
            Mask.delete();
        end

        if ~Old
            set_param(Blocks{Index}, ...
                'ContentPreviewEnabled', 'off', ...
                'ShowPortLabels', 'FromPortBlockName', ...
                'OpenFcn', '');
        else

            Position = get_param(Blocks{Index}, 'Position');
            MinWidth = abs(Position(1) - Position(3));
            Vermeer_Base.BlockResize(Blocks{Index}, 'ExpandingHeight', MinWidth)
            set_param(Blocks{Index}, ...
                'MaskInitialization', ...
                ['Vermeer_Base.SetBackgroundColor(''white'');', newline, ...
                'Vermeer_Base.Subsystem_InitFcn(gcb);'], ...
                'MaskDisplay', ...
                'Vermeer_Base.BlockResize(gcb, ''Expanding'', '''','''',10);', ...
                'MaskIconOpaque', ...
                'transparent', ...
                'MaskIconUnits', ...
                'normalized', ...
                'MaskSelfModifiable', ...
                'on', ...
                'MaskRunInitForIconRedraw', ...
                'on', ...
                'MaskHelp', ...
                'web(fullfile(docroot, ''simulink/slref/codereusesubsystem.html''))', ...
                'MaskType', ...
                '', ...
                'MaskDescription', ...
                '');
        end
    catch
    end
end

end